package extra01;

/*Crie a seguinte hierarquia de classes:
*	Uma interface para representar qualquer forma geométrica, definindo
* métodos para cálculo do perímetro e cálculo da área da forma;
*	Uma classe abstrata para representar quadriláteros. Seu construtor 
* deve receber os tamanhos dos 4 lados e o método de cálculo do perímetro
* já pode ser implementado;
*	Classes para representar retângulos e quadrados. A primeira deve receber
* o tamanho da base e da altura no construtor, enquanto a segunda deve 
* receber apenas o tamanho do lado;
*	Uma classe para representar um círculo. Seu construtor deve receber o tamanho do raio.
*
* No programa principal, pergunte ao usuário quantas formas ele deseja criar.
* Em seguida, para cada forma, pergunte se deseja criar um quadrado, um retângulo
* ou um círculo, solicitando os dados necessários para criar a forma. Todas as 
* formas criadas devem ser armazenadas em um vetor. Finalmente, imprima: (a) os dados 
* (lados ou raio); (b) os perímetros; e (c) as áreas de todas as formas. Para (b) e (c)
* , tire vantagem do polimorfismo, enquanto que para (a) utilize instanceof e downcast.
* Parte 2 de 6
* Parte1 = IFormaGeometrica
* Parte2 = Quadrilatero
* Parte3 = Retangulo
* Parte4 = Quadrado
* Parte5 = Circulo
* Parte6 = TestFormaGeometrica
*/


public abstract class Quadrilatero implements IFormaGeometrica{
	protected double lado1;
  protected double lado2;
  protected double lado3;
  protected double lado4;
  
  public Quadrilatero() {
  
  }
	
	public Quadrilatero(double lado1, double lado2, double lado3, double lado4) {
		this.lado1 = lado1;
		this.lado2 = lado2;
		this.lado3 = lado3;
		this.lado4 = lado4;
	}

	public double getLado1() {
		return lado1;
	}

	public void setLado1(double lado1) {
		this.lado1 = lado1;
	}

	public double getLado2() {
		return lado2;
	}

	public void setLado2(double lado2) {
		this.lado2 = lado2;
	}

	public double getLado3() {
		return lado3;
	}

	public void setLado3(double lado3) {
		this.lado3 = lado3;
	}

	public double getLado4() {
		return lado4;
	}

	public void setLado4(double lado4) {
		this.lado4 = lado4;
	}
	
	@Override
	public double area() {
		return lado1*lado2*lado3*lado4;
	}
	
	@Override
	public double perimetro() {
		return lado1+lado2+lado3+lado4;
	}

}
	
	
